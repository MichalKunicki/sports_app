import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.scss";
import { FullVideoList } from "../types";
import Header from "../components/header/Header";

const handleImageError = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {
  const parent = e.currentTarget.parentElement;
  const grandparent = parent?.parentElement;
  const grandGrandParent = grandparent?.parentElement;
  const target = grandGrandParent?.parentElement;
  if (target != undefined) {
    target.style.display = "none";
  }
};

const Home: NextPage<{ fullVideoList: FullVideoList[] }> = ({
  fullVideoList,
}) => {
  return (
    <>
      <Head>
        <title>Sportify</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Header></Header>
        {fullVideoList.map((video: FullVideoList) => (
          <div id="highlights" className={styles.matchCard} key={video.title}>
            <div className={styles.matchName}>
              <p className={styles.date}>{video.date.slice(0, 10)}</p>
              <div className={styles.title}>
                <a href={video.side1.url} target="_blank" rel="noreferrer">
                  <p className={styles.side}>{`${
                    video.title.split("-")[0]
                  }`}</p>
                </a>
                <p>&nbsp;:&nbsp;</p>
                <a href={video.side2.url} target="_blank" rel="noreferrer">
                  <p className={styles.side}>{video.title.split("-")[1]}</p>
                </a>
              </div>
            </div>
            <a href={video.url} target="_blank" rel="noreferrer">
              <div className={styles.image}>
                <Image
                  blurDataURL={video.thumbnail}
                  placeholder="blur"
                  alt="thumbnail-photo"
                  src={video.thumbnail}
                  layout="responsive"
                  height="60%"
                  width="100%"
                  onError={(e) => handleImageError(e)}
                />
              </div>
            </a>
          </div>
        ))}
      </main>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async () => {
  const res = await fetch(
    "https://free-football-soccer-videos.p.rapidapi.com/",
    {
      headers: {
        "X-RapidAPI-Key": "6e53d9a08cmsh751eda812235656p1e847fjsn1fa6500eb5cd",
        "X-RapidAPI-Host": "free-football-soccer-videos.p.rapidapi.com",
      },
    }
  );
  const results = await res.json();

  return {
    props: {
      fullVideoList: results,
    },
  };
};

export default Home;
